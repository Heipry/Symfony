security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
       # users_in_memory: { memory: null }
        in_memory:
            memory:
                users:
                    carlos:
                        # php bin/console security:encode-password pass
                        password: pass
                        roles: 'ROLE_USER'
                    admin:
                        # php bin/console security:encode-password word
                        password: word
                        roles: ['ROLE_ADMIN', 'ROLE_USER']

    encoders:
        # php bin/console security:encode‚Äêpassword pass
        Symfony\Component\Security\Core\User\User: plaintext
        # Symfony\Component\Security\Core\User\User:
            # algorithm: bcrypt
            # cost: 12
        # AppBundle\Entity\Usuario:
            # algorithm: bcrypt
            # cost: 12
        # AppBundle\Entity\Usuario: plaintext
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true


            # activate different ways to authenticate
            http_basic: true
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            logout:
                path:   app_logout
                target: /
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        -  { path: ^/user, roles: ROLE_USER }
        -  { path: ^/logout, roles: [IS_AUTHENTICATED_ANONYMOUSLY] }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
